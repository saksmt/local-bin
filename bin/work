#!/usr/bin/env bash

[[ -f /usr/local/etc/work ]] && source /usr/local/etc/work
source /usr/local/etc/colors.sh

TMP_FILES_ROOT=${TMP_FILES_ROOT:-${XDG_RUNTIME_DIR}/work.script}

mkdir -p "${TMP_FILES_ROOT}" &>/dev/null

workFile="${TMP_FILES_ROOT}/work-start"
pauseFile="${TMP_FILES_ROOT}/work-paused"

workDayDurationMillis=$(duration-to-millis "${WORK_DAY_DURATION:-9h}")
overtimeThreshold=$(duration-to-millis "${OVERTIME_THRESHOLD:-9m}")

export PRECISION=${REPORTING_PRECISION:-m}

{ [[ n"$(type -t vpn-start)" == n ]] \
  || [[ n"$(type -t vpn-stop)" == n ]] \
  || [[ n"$(type -t vpn-is-up)" == n ]]; } && {
    echo "${error}You need to define ${cyan}vpn-start${clr}, ${cyan}vpn-stop${clr} and ${cyan}vpn-is-up${clr} functions in ${highlight}/usr/local/etc/work${clr}" >&2
    exit 1;
  }

function status() {
    if vpn-is-up; then
      echo "${info}VPN up"
    else
      echo "${info}VPN down"
    fi
    if ! [[ -f "${workFile}" ]]; then
      echo "${info}Never worked in this boot"
      exit 0
    fi

    workStarted=$(head -n1 "${workFile}")
    workEnded=$(tail -n+2 "${workFile}")

    workStartHumane=$(date --date=@"${workStarted}" +%H:%M)

    if [[ n"${workEnded}" == n ]]; then
      if [[ -f ${pauseFile} ]]; then
        echo "${warning}On pause"
      fi
      workDuration=$(( $(date +%s) - workStarted ))000
      workEstEnd=$(( workStarted + workDayDurationMillis / 1000 ))
      workEstEndHumane=$(date --date=@${workEstEnd} +%H:%M)
      workOvertime=$(( workDuration - workDayDurationMillis ))
      workOvertimeHumane=
      if [[ ${workOvertime} -gt ${overtimeThreshold} ]]; then
        workOvertimeHumane=", overtime: ${red}$(millis-to-duration ${workOvertime})${clr}"
      fi
      echo "${info}Working since ${workStartHumane}, currently for $(millis-to-duration ${workDuration} ) (work day ends at ${workEstEndHumane})${workOvertimeHumane}"
    else
      workDuration=$(( workEnded - workStarted ))000
      workEndHumane=$(date --date=@"${workEnded}" +%H:%M)
      echo "${info}Last work session lasted $(millis-to-duration ${workDuration} ) (from ${workStartHumane} till ${workEndHumane})"
    fi
}

case "${1}" in
  start | begin | up | resume | continue )
    if vpn-is-up; then
      echo "${info}Already working"
      exit 0
    fi
    if ! [[ -f ${pauseFile} ]]; then
      date +%s > "${workFile}"
    fi
    vpn-start
    rm -f "${pauseFile}"
  ;;
  finish | stop | end | down )
    if vpn-is-up || [[ -f "${pauseFile}" ]]; then
      vpn-stop
      rm -f "${pauseFile}" &>/dev/null
      date +%s >> "${workFile}"
    fi
    status
  ;;
  resolv | resolvconf | resolv.conf )
    bat /etc/resolv.conf
  ;;
  stats | status )
    status
  ;;
  pause)
    if vpn-is-up; then
      vpn-stop
      touch "${pauseFile}"
    fi
    status
  ;;
  * )
    echo "usage: work <start|end|pause|resume|status|resolv.conf>"
  ;;
esac